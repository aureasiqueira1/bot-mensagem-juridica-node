import { OpenAI } from 'openai';
import { ContentGenerationPrompt, Message, MessageStyle, MessageTopic } from '../types';
import { logger } from '../utils/Logger';

/**
 * Gerador de conte√∫do criativo e bem-humorado para engajar a equipe
 */
export class AIContentGenerator {
  private openai: OpenAI;
  private readonly maxRetries = 3;

  constructor() {
    const apiKey = process.env.OPENAI_API_KEY;

    if (!apiKey) {
      throw new Error('OPENAI_API_KEY n√£o encontrada no .env');
    }

    this.openai = new OpenAI({ apiKey });
  }

  /**
   * Gera uma mensagem criativa focada em humor e engajamento
   */
  async generateCreativeMessage(): Promise<Message> {
    // Escolhe estilo e t√≥pico de forma inteligente para manter variedade
    const { style, topic } = this.selectOptimalStyleAndTopic();

    return this.generateMessage({
      style,
      topic,
    });
  }

  /**
   * Seleciona o melhor estilo e t√≥pico baseado no hist√≥rico
   */
  private selectOptimalStyleAndTopic(): {
    style: MessageStyle;
    topic: MessageTopic;
  } {
    const dayOfWeek = new Date().getDay();

    // Segunda-feira: energia positiva
    if (dayOfWeek === 1) {
      return {
        style: Math.random() > 0.5 ? MessageStyle.HUMOR : MessageStyle.TIP,
        topic: MessageTopic.TECH_HUMOR,
      };
    }

    // Ter√ßa e Quarta: conte√∫do t√©cnico mais s√©rio
    if (dayOfWeek === 2 || dayOfWeek === 3) {
      return {
        style: Math.random() > 0.6 ? MessageStyle.CURIOSITY : MessageStyle.TIP,
        topic: this.getRandomTopic(),
      };
    }

    // Quinta: reflexivo mas descontra√≠do
    if (dayOfWeek === 4) {
      return {
        style: Math.random() > 0.7 ? MessageStyle.REFLECTION : MessageStyle.HUMOR,
        topic: MessageTopic.MIXED,
      };
    }

    // Sexta: humor para terminar bem a semana
    if (dayOfWeek === 5) {
      return {
        style: MessageStyle.HUMOR,
        topic: this.getRandomTopic(),
      };
    }

    // Fallback (n√£o deveria acontecer em dias √∫teis)
    return {
      style: MessageStyle.HUMOR,
      topic: MessageTopic.MIXED,
    };
  }

  /**
   * Gera uma mensagem com par√¢metros espec√≠ficos
   */
  async generateMessage(prompt: ContentGenerationPrompt): Promise<Message> {
    let attempt = 0;

    while (attempt < this.maxRetries) {
      try {
        attempt++;
        logger.info(`üé® Gerando conte√∫do criativo (tentativa ${attempt})...`, {
          style: prompt.style,
          topic: prompt.topic,
        });

        const systemPrompt = this.buildCreativeSystemPrompt(prompt);
        const userPrompt = this.buildCreativeUserPrompt(prompt);

        const completion = await this.openai.chat.completions.create({
          model: 'gpt-4-turbo-preview',
          messages: [
            { role: 'system', content: systemPrompt },
            { role: 'user', content: userPrompt },
          ],
          max_tokens: 200, // Reduzido para mensagens mais concisas
          temperature: 0.9, // Mais criatividade
          presence_penalty: 0.8, // Evita repeti√ß√µes
          frequency_penalty: 0.5,
          top_p: 0.95, // Adiciona variedade
        });

        const content = completion.choices[0]?.message?.content?.trim();

        if (!content) {
          throw new Error('Resposta vazia da API de IA');
        }

        // Valida a mensagem
        const validation = this.validateMessage(content);
        if (!validation.isValid) {
          logger.warn('Mensagem n√£o passou na valida√ß√£o:', validation.issues);
          throw new Error(`Mensagem inv√°lida: ${validation.issues.join(', ')}`);
        }

        const message: Message = {
          content: this.polishMessage(content),
          style: prompt.style,
          topic: prompt.topic,
        };

        logger.success('Conte√∫do criativo gerado com sucesso');
        return message;
      } catch (error) {
        logger.error(`Erro na tentativa ${attempt} de gera√ß√£o:`, error);

        if (attempt >= this.maxRetries) {
          throw new Error(`Falha ao gerar conte√∫do ap√≥s ${this.maxRetries} tentativas: ${error}`);
        }

        await this.delay(2000 * attempt);
      }
    }

    throw new Error('Falha inesperada na gera√ß√£o de conte√∫do');
  }

  /**
   * Constr√≥i o prompt do sistema focado em criatividade e humor
   */
  private buildCreativeSystemPrompt(prompt: ContentGenerationPrompt): string {
    const basePrompt = `Voc√™ √© um especialista em criar conte√∫do SUPER CRIATIVO e bem-humorado para uma equipe de tecnologia.

üéØ OBJETIVO: Criar mensagens que fa√ßam a equipe SORRIR e se ENGAJAR todos os dias √∫teis.

üìè FORMATO:
- Responda APENAS com o conte√∫do da mensagem
- 1-2 frases curtas e impactantes
- M√°ximo 200 caracteres
- Portugu√™s brasileiro, informal e divertido
- NUNCA repita ideias anteriores

üë• P√öBLICO: Desenvolvedores, PMs, designers, e pessoal de tech em geral
üé® TOM: Descontra√≠do, inteligente, com humor refinado (n√£o for√ßado)`;

    const enhancedStyleInstructions = {
      [MessageStyle.HUMOR]: `
ESTILO: HUMOR INTELIGENTE
‚ú® Crie piadas originais sobre:
- Bugs que se comportam bem s√≥ na demo
- A rela√ß√£o amor/√≥dio com JavaScript
- Coment√°rios de c√≥digo hil√°rios
- Situa√ß√µes absurdas do dia a dia tech
- Memes que devs v√£o entender na hora
üé≠ Use ironia sutil e refer√™ncias que ressoem com a galera tech`,

      [MessageStyle.CURIOSITY]: `
ESTILO: CURIOSIDADE FASCINANTE
üîç Compartilhe fatos que v√£o fazer a pessoa pensar "nossa, n√£o sabia disso!":
- Hist√≥rias malucas por tr√°s de tecnologias famosas
- Bugs hist√≥ricos que mudaram o mundo
- Easter eggs escondidos em sistemas conhecidos
- Estat√≠sticas surpreendentes sobre desenvolvimento
üí° Fa√ßa perguntas que despertem a curiosidade`,

      [MessageStyle.TIP]: `
ESTILO: DICAS PR√ÅTICAS E DIVERTIDAS
üõ†Ô∏è D√™ dicas que realmente ajudem, mas com humor:
- Shortcuts que v√£o fazer a pessoa se sentir ninja
- Truques para debuggar mais r√°pido
- Boas pr√°ticas explicadas de forma engra√ßada
- Ferramentas ou extens√µes incr√≠veis
‚ö° Seja √∫til E divertido ao mesmo tempo`,

      [MessageStyle.REFLECTION]: `
ESTILO: REFLEX√ïES COM HUMOR
ü§î Provoque pensamentos sobre:
- Como a tecnologia est√° mudando nossas vidas (de forma engra√ßada)
- Paradoxos hil√°rios do mundo tech
- Previs√µes malucas sobre o futuro da programa√ß√£o
- Filosofia de bot√£o: "Por que esse bot√£o existe?"
üéØ Seja profundo mas mantenha o tom leve e divertido`,
    };

    const topicInstructions = {
      [MessageTopic.TECH_HUMOR]:
        'Foque em humor inteligente sobre tecnologia, linguagens e ferramentas',
      [MessageTopic.DEV_LIFE]:
        'Situa√ß√µes engra√ßadas da vida real de desenvolvedor - memes internos da profiss√£o',
      [MessageTopic.CODE_WISDOM]:
        'Sabedoria sobre programa√ß√£o com humor - boas pr√°ticas de forma divertida',
      [MessageTopic.TECH_FACTS]: 'Curiosidades fascinantes sobre tecnologia que v√£o impressionar',
      [MessageTopic.LEGAL_TECH]:
        'Misture direito e tecnologia de forma criativa (LGPD, compliance, contratos digitais)',
      [MessageTopic.DEVELOPMENT]:
        'Foque em desenvolvimento, linguagens, frameworks, debugging, deploy',
      [MessageTopic.PROJECT_MANAGEMENT]:
        'Una gest√£o de projetos com realidade de desenvolvedor (sprints, deadlines, etc)',
      [MessageTopic.AGILE]:
        'Conecte metodologias √°geis com situa√ß√µes reais e divertidas do dia a dia',
      [MessageTopic.MIXED]: 'Combine temas livremente - seja criativo e surpreendente!',
    };

    return `${basePrompt}

${enhancedStyleInstructions[prompt.style]}

üéØ T√ìPICO: ${topicInstructions[prompt.topic]}

${this.buildAvoidanceContext(prompt.previousMessages)}

üöÄ IMPORTANTE: Sua miss√£o √© fazer a equipe come√ßar o dia com um sorriso!`;
  }

  /**
   * Constr√≥i contexto de mensagens para evitar repeti√ß√µes
   */
  private buildAvoidanceContext(previousMessages?: string[]): string {
    if (!previousMessages || previousMessages.length === 0) {
      return '';
    }

    return `üö´ EVITE REPETIR: N√£o reuse essas ideias das √∫ltimas mensagens:
${previousMessages
  .slice(0, 8)
  .map((msg, index) => `${index + 1}. ${msg.substring(0, 80)}...`)
  .join('\n')}`;
  }

  /**
   * Constr√≥i o prompt do usu√°rio com contexto temporal
   */
  private buildCreativeUserPrompt(prompt: ContentGenerationPrompt): string {
    const dayContext = this.getDayContext();
    const timeContext = this.getTimeContext();

    return `Crie uma mensagem ${prompt.style} sobre ${
      prompt.topic
    } para ${dayContext}${timeContext}.

üé® A mensagem deve ser:
‚úÖ SUPER criativa e original
‚úÖ Bem-humorada e engajante
‚úÖ Curta (1-2 frases, m√°x 200 chars)
‚úÖ Que fa√ßa a equipe sorrir
‚úÖ Com refer√™ncias que devs v√£o entender

${this.getStyleSpecificInstructions(prompt.style)}

Responda APENAS com o conte√∫do da mensagem:`;
  }

  /**
   * Instru√ß√µes espec√≠ficas por estilo
   */
  private getStyleSpecificInstructions(style: MessageStyle): string {
    switch (style) {
      case MessageStyle.HUMOR:
        return 'üòÑ Use humor inteligente - fa√ßa uma piada que vai arrancar risadas!';
      case MessageStyle.CURIOSITY:
        return 'ü§Ø Compartilhe algo que vai fazer a pessoa falar "caramba, n√£o sabia disso!"';
      case MessageStyle.TIP:
        return 'üí° D√™ uma dica pr√°tica mas com um toque divertido que vai ajudar mesmo!';
      case MessageStyle.REFLECTION:
        return 'ü§î Fa√ßa uma provoca√ß√£o filos√≥fica sobre tech que vai gerar discuss√£o!';
    }
  }

  /**
   * Obt√©m contexto do dia da semana
   */
  private getDayContext(): string {
    const day = new Date().getDay();
    const dayNames = {
      1: 'come√ßar bem a segunda',
      2: 'animar a ter√ßa',
      3: 'acelerar a quarta',
      4: 'energizar a quinta',
      5: 'fechar a sexta com chave de ouro',
    };

    return dayNames[day as keyof typeof dayNames] || 'alegrar o dia';
  }

  /**
   * Obt√©m contexto temporal
   */
  private getTimeContext(): string {
    const now = new Date();
    const hour = now.getHours();

    if (hour < 10) return ' de manh√£';
    if (hour < 14) return ' no almo√ßo';
    if (hour < 18) return ' da tarde';
    return ' do fim do expediente';
  }

  /**
   * Seleciona t√≥pico aleat√≥rio
   */
  private getRandomTopic(): MessageTopic {
    // Prioriza t√≥picos novos (mais espec√≠ficos)
    const preferredTopics = [
      MessageTopic.TECH_HUMOR,
      MessageTopic.DEV_LIFE,
      MessageTopic.CODE_WISDOM,
      MessageTopic.TECH_FACTS,
    ];

    // 80% chance de usar t√≥picos preferidos, 20% qualquer t√≥pico
    if (Math.random() < 0.8) {
      return preferredTopics[Math.floor(Math.random() * preferredTopics.length)]!;
    }

    const allTopics = Object.values(MessageTopic);
    return allTopics[Math.floor(Math.random() * allTopics.length)]!;
  }

  /**
   * Aplica polimento final na mensagem
   */
  private polishMessage(content: string): string {
    // Remove quebras desnecess√°rias e ajusta pontua√ß√£o
    return content
      .replace(/\n+/g, ' ')
      .replace(/\s+/g, ' ')
      .replace(/([.!?])\s*([.!?])/g, '$1') // Remove pontua√ß√£o duplicada
      .trim();
  }

  /**
   * Utilit√°rio para aguardar
   */
  private delay(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  /**
   * Valida se a mensagem gerada est√° dentro dos crit√©rios
   */
  private validateMessage(content: string): { isValid: boolean; issues: string[] } {
    const issues: string[] = [];

    if (content.length > 200) {
      issues.push('Mensagem muito longa (>200 caracteres)');
    }

    if (content.length < 15) {
      issues.push('Mensagem muito curta (<15 caracteres)');
    }

    // Verifica se tem conte√∫do substantivo
    if (content.split(' ').length < 3) {
      issues.push('Mensagem com poucas palavras');
    }

    // Verifica se n√£o √© apenas emoji
    if (/^[\s\p{Emoji_Presentation}\p{Extended_Pictographic}]+$/u.test(content)) {
      issues.push('Mensagem cont√©m apenas emojis');
    }

    return {
      isValid: issues.length === 0,
      issues,
    };
  }

  /**
   * Gera uma mensagem com estilo e t√≥pico aleat√≥rios (m√©todo antigo mantido para compatibilidade)
   */
  async generateRandomMessage(): Promise<Message> {
    return this.generateCreativeMessage();
  }

  /**
   * Gera conte√∫do especial para ocasi√µes espec√≠ficas
   */
  async generateSpecialOccasionMessage(
    occasion: 'monday' | 'friday' | 'deadline' | 'deploy'
  ): Promise<Message> {
    const specialPrompts = {
      monday: {
        style: MessageStyle.HUMOR,
        topic: MessageTopic.TECH_HUMOR,
        context: 'segunda-feira motivacional',
      },
      friday: {
        style: MessageStyle.HUMOR,
        topic: MessageTopic.DEV_LIFE,
        context: 'sexta-feira celebrativa',
      },
      deadline: {
        style: MessageStyle.HUMOR,
        topic: MessageTopic.PROJECT_MANAGEMENT,
        context: 'deadline se aproximando',
      },
      deploy: {
        style: MessageStyle.HUMOR,
        topic: MessageTopic.DEVELOPMENT,
        context: 'deploy em produ√ß√£o',
      },
    };

    const config = specialPrompts[occasion];

    return this.generateMessage({
      style: config.style,
      topic: config.topic,
      specialContext: config.context,
    });
  }

  /**
   * Obt√©m banco de mensagens de emerg√™ncia para fallback
   */
  getFallbackMessages(): string[] {
    return [
      'üíª Por que os programadores preferem modo escuro? Porque a luz atrai bugs! üêõ',
      'ü§ñ Machine Learning √© como adolescente: tem potencial infinito, mas ningu√©m entende direito o que t√° acontecendo! üòÖ',
      "‚ö° Git commit -m 'funciona na minha m√°quina' - a frase mais honesta da programa√ß√£o! üöÄ",
      "üîç Debugging √© 90% confus√£o e 10% 'COMO ISSO FUNCIONOU?!' ü§Ø",
      "üì± Apps hoje: 50MB para mostrar 'Hello World'. Nos anos 90: sistema operacional inteiro em 1 disquete! üíæ",
      "üéØ A diferen√ßa entre junior e senior? Junior googla 'como fazer X'. Senior googla 'por que X n√£o funciona'. üîç",
      '‚öñÔ∏è LGPD: quando voc√™ percebe que at√© o cookie do navegador precisa de advogado! üç™',
      'üöÄ Deploy na sexta? S√≥ se voc√™ gosta de adrenalina no fim de semana! üò±',
      'üß† IA est√° ficando t√£o inteligente que logo vai entender nosso c√≥digo melhor que n√≥s! ü§ñ',
      '‚è∞ Estimativa de tempo em desenvolvimento: multiplique por œÄ e reze! üôè',
    ];
  }
}
